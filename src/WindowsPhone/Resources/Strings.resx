<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="About" xml:space="preserve">
    <value>About</value>
    <comment>About Menu Item</comment>
  </data>
  <data name="About_CopyrightInfo" xml:space="preserve">
    <value>Copyright (c) 2015 Brian Holley</value>
    <comment>About - copyright info</comment>
  </data>
  <data name="About_CopyrightLabel" xml:space="preserve">
    <value>Program/Graphics</value>
    <comment>About - label for program copyright</comment>
  </data>
  <data name="About_FontCopyrightInfo" xml:space="preserve">
    <value>Segoe Print</value>
    <comment>About - font info</comment>
  </data>
  <data name="About_FontCopyrightLabel" xml:space="preserve">
    <value>Font</value>
    <comment>About - label for font copyright</comment>
  </data>
  <data name="About_Title" xml:space="preserve">
    <value>About Spider</value>
    <comment>About - title</comment>
  </data>
  <data name="About_TrialModeLabel" xml:space="preserve">
    <value>Trial Mode</value>
    <comment>About - label for trial mode</comment>
  </data>
  <data name="About_UpgradeLabel" xml:space="preserve">
    <value>Tap here to upgrade to the full version of Spider</value>
    <comment>About - application upgrade/purchase message</comment>
  </data>
  <data name="About_VersionLabel" xml:space="preserve">
    <value>Version</value>
    <comment>About - label for app version</comment>
  </data>
  <data name="AppName" xml:space="preserve">
    <value>Spider</value>
    <comment>Application Name</comment>
  </data>
  <data name="DisabledInTrial" xml:space="preserve">
    <value>This feature requires the full version of Spider. Click here to go to the Marketplace.</value>
    <comment>Feature disabled in trial message.</comment>
  </data>
  <data name="EmptyStacksDealError" xml:space="preserve">
    <value>Cannot deal a new row while there are empty stacks</value>
    <comment>Error when the user tries to deal when there are empty stacks</comment>
  </data>
  <data name="Loading" xml:space="preserve">
    <value>Loading Spider</value>
    <comment>Content loading message</comment>
  </data>
  <data name="Menu_TrialBanner" xml:space="preserve">
    <value>Trial Version</value>
    <comment>Menu - label for the trial banner in the corner</comment>
  </data>
  <data name="Menu_TrialBannerNav" xml:space="preserve">
    <value>Click here to go to the Marketplace to upgrade to the full version of Spider.</value>
    <comment>Menu - trial window message when clicking on the trial banner</comment>
  </data>
  <data name="Menu_TrialNavFailed" xml:space="preserve">
    <value>Cannot currently reach the Marketplace. Please try again later.</value>
    <comment>Menu - message when showing the Marketplace fails</comment>
  </data>
  <data name="NewGame" xml:space="preserve">
    <value>New Game</value>
    <comment>New Game Menu Item</comment>
  </data>
  <data name="Options" xml:space="preserve">
    <value>Options</value>
    <comment>Options Menu Item</comment>
  </data>
  <data name="Options_DeckColorLabel" xml:space="preserve">
    <value>Deck</value>
    <comment>Options - label for deck backing</comment>
  </data>
  <data name="Options_ThemeLabel" xml:space="preserve">
    <value>Theme</value>
    <comment>Options - label for theme pack</comment>
  </data>
  <data name="Resume" xml:space="preserve">
    <value>Resume</value>
    <comment>Resume Menu Item</comment>
  </data>
  <data name="Resuming" xml:space="preserve">
    <value>Resuming Spider</value>
    <comment>Content loading message when app is resuming</comment>
  </data>
  <data name="Statistics" xml:space="preserve">
    <value>Statistics</value>
    <comment>Statistics Menu Item</comment>
  </data>
  <data name="Stats_TotalGames" xml:space="preserve">
    <value>Games Played</value>
    <comment>Statistics - label for number of games played</comment>
  </data>
  <data name="Stats_GamesWon" xml:space="preserve">
    <value>Games Won</value>
    <comment>Statistics - label for number of games won</comment>
  </data>
  <data name="Stats_WinRate" xml:space="preserve">
    <value>Win Rate</value>
    <comment>Statistics - label for percentage of games won</comment>
  </data>
  <data name="Stats_ResetButton" xml:space="preserve">
    <value>[Clear]</value>
    <comment>Statistics - button to reset statistics</comment>
  </data>
  <data name="Stats_TotalTimeLabel" xml:space="preserve">
    <value>Total Time Played</value>
    <comment>Statistics - label for total time played</comment>
  </data>
  <data name="Game_Again" xml:space="preserve">
    <value>Tap to start a new game</value>
    <comment>Game - message to the user to tap the screen to start a new game</comment>
  </data>
  <data name="Game_WinMessage" xml:space="preserve">
    <value>You Win!</value>
    <comment>Game - message when the user has won the game</comment>
  </data>
  <data name="ResourceLanguage" xml:space="preserve">
    <value>en-us</value>
    <comment>Language for this resource file</comment>
  </data>
</root>